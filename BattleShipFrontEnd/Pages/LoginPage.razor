@page "/"
@using BattleShipFrontEnd.Models
@using BattleShipFrontEnd.Data.LoginData
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUserService UserService

<AuthorizeView>
    <NotAuthorized>
	    <div class="container h-100">
        		<div class="d-flex justify-content-center h-100">
        			<div class="user_card">
        				<div class="d-flex justify-content-center">
        					<div class="brand_logo_container">
        						<img src="https://cdn2.iconfinder.com/data/icons/anchor-8/288/anchor-02-512.png" class="brand_logo" alt="Logo">
        					</div>
        				</div>
        				<div class="d-flex justify-content-center form_container">
        					<form>
        						<div class="input-group mb-3">
	                                <div class="input-group-append">
		                                <span class="input-group-text"><i class="fas fa-user"><span class="oi oi-person"></span></i></span>
	                                </div>
	                                <input type="text"  class="form-control input_user" @bind-value="username" placeholder="username">
        						</div>
        						<div class="input-group mb-2">
	                                <div class="input-group-append">
		                                <span class="input-group-text"><i class="fas fa-key"><span class="oi oi-lock-locked"></span></i></span>
	                                </div>
        							<input type="password"  class="form-control input_pass" @bind-value="password" placeholder="password">
        						</div>
        						<div class="form-group">
        							<div class="custom-control custom-checkbox">
        								<input type="checkbox" class="custom-control-input" id="customControlInline">
        								<label class="custom-control-label" for="customControlInline">Remember me</label>
        							</div>
        						</div>
        						<div class="d-flex justify-content-center mt-3 login_container">
        							<button @onclick="ValidateUserAsync" type="button" name="button" class="btn login_btn">Login</button>
        						</div>
	                            <div class="d-flex justify-content-center mt-3 login_container">
		                            <button @onclick="RegisterUserAsync" type="button" name="button" class="btn register_btn">Register</button>
	                            </div>
	                            <div class="form-group" style="color:darkred">@errorMessage</div>
        					</form>
        				</div>
                    </div>
        		</div>
        	</div>
    </NotAuthorized>
    <Authorized>
        <h1>Congrats, you have logged in!</h1>
    </Authorized>
</AuthorizeView>    

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task ValidateUserAsync() {
        errorMessage = "";
        try {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
	        NavigationManager.NavigateTo("/Instructions");
        }
        catch (Exception e) {
	        errorMessage = e.Message;
        }
    }

	private async Task RegisterUserAsync() {
		errorMessage = "";
		try {
			await UserService.RegisterUserAsync(username, password);
			errorMessage = "User registered";
			username = "";
			password = "";
		}
		catch (Exception e) {
			errorMessage = e.Message;
		}
	}
}